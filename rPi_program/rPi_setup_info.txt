## NEW VERSION - rPi SETUP for BEEhaviour Lab ##

## ---------------------- ##

Start with:
- SD card (using 128 GB)
- Raspberry Pi 4B (4 GB)
- USB-SATA cable
- PiCam (using NoIR V2)
- SSD (Gigastone Game Pro SSD 512 GB)

## ---------------------- ##

1. Flash card
- Download / open Raspberry Pi Imager (at least v1.7)
- Select Raspbian version:
  - Old setup uses DEBIAN-BULLSEYE (newest release isn't working with VNC as of 14/10/2023)
  - New setup uses DEBIAN-BOOKWORM 12
- Select SD card from storage option
- Click “Settings” and enable:
  - Enable SSH
  - Set username and password (e.g., username: rPi1, password: pipass)

## ---------------------- ##

2. Connect to monitor, mouse, keyboard
- Make sure Pi is powered off before inserting SD card
- Insert SD, plug it in

## ---------------------- ##

4. rPi configuration

# Download setup file from GitHub:
wget https://raw.githubusercontent.com/rachelparkinson/beehaviour-lab/refs/heads/main/rPi_program/setup_rpi.sh

# Install it on rPi
chmod +x setup_rpi.sh
./setup_rpi.sh

# Install Ultralytics (this takes awhile)
pip install ultralytics ncnn 



## ---------------------- ##

5. Log in to RealVNC to allow for file transfer
sudo vnclicensewiz

## ---------------------- ##

6. Transfer git program (from local copy via ssh)

# Fix rPi name (e.g., rPi1...) and replace <raspberry_pi_ip> with actual IP. 
# Need to be on same wifi network as rPi for this to work

scp -r /Users/user/Documents/beehaviour-lab/rPi_program rPi21@<raspberry_pi_ip>:/home/rPi21/


## ----------------------- ## 

8. Setup SSD

Connect SSD
- Connect to USB 3.0 (blue)
- wait 30s, then in Gparted select ‘GParted > Refresh Devices’ (1-2 mins)
- Select SSD (from drop-down menu at top right) and wait for the information to display

Create Partition Table
- Select ‘Device > Create Partition Table’ from top menu
- Keep default settings, select ‘Apply’ (wait a few mins, might not look like anything’s happening)

Create Partition
- select ‘Partiton > New’ from top menu
- Keep all default settings (including the ext4 filesystem), but add a sensible Label to help identify it later on (e.g., ‘WDSSD’)
- Select ‘Edit > Apply All Operations’ from the top menu and click yes to the warning once you’ve checked everything (may take some time)

Run ssd_setup.py

cd ~/rPi_program
chmod +x ssd_setup.sh    # (only needed once to make it executable)
./ssd_setup.sh


## ----------------------- ##

9. Get Ultralytics

#Download onto Mac

mkdir ~/ultralytics_packages
cd ~/ultralytics_packages

pip3 download "ultralytics[export]"

# Transfer folder to Pi
scp -r ~/ultralytics_packages rPi21@<raspberry_pi_ip>:/home/rPi21/


# On Pi, activate vent
source ~/venv/bin/activate

#Activate packages offline
cd ~/ultralytics_packages
pip install --no-index --find-links=. ultralytics[export]



## ----------------------- ##

9. Test YOLO ncnn inference

# move test file to rPi 
scp -r /Users/user/Documents/beehaviour-lab/example_data/trim_vid_5bees1feeder.mp4 rPi21@172.20.10.2:/home/rPi21/

From: https://www.ejtech.io/learn/yolo-on-raspberry-pi

wget https://ejtech.io/code/yolo_detect.py

The script takes three arguments, “model”, “source”, and “resolution”:

- - model: Path to the trained model weights (e.g. “runs/detect/train/weights/yolo11n_ncnn_model”)
- - source: Path to an image file (“test_img.jpg”), a folder of images (“img_dir”), a video file (“test_vid.mp4”), or the index for a connected USB camera (“usb0”).
- - resolution (optional): Resolution in WxH to display inference results at. If not specified, the program will match the source resolution.

python yolo_detect.py --model=yolo11n_ncnn_model --source=usb0 --resolution=640x480

python yolo_detect.py --model=rPi_program/bee_detector --source=trim_vid_5bees1feeder.mp4 --resolution=640x360

